unit PereselenieU;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Data.DB, MemDS, DBAccess,
  Uni;

type
  TFMPereselenie = class(TForm)
    CBOtkuda: TComboBox;
    CBKogo: TComboBox;
    Label1: TLabel;
    Label2: TLabel;
    CBKuda1: TComboBox;
    CBKomnata: TComboBox;
    Label3: TLabel;
    Label4: TLabel;
    Button1: TButton;
    Button2: TButton;
    UniQuery1: TUniQuery;
    UniQuery2: TUniQuery;
    procedure Button2Click(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure CBOtkudaChange(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure CBKogoChange(Sender: TObject);
    procedure CBKuda1Change(Sender: TObject);
    procedure CBKomnataChange(Sender: TObject);
    procedure UpdateAndMoveRecord(const FIOSotrud: string; const FTableName: string;
      const FTableNameKuda: string; const komnata: string; const mesto: string);
  private
    { Private declarations }

  public
    { Public declarations }
  end;

var
  FMPereselenie: TFMPereselenie;


implementation

{$R *.dfm}

uses
  welcomu;

var
  fiosotrud, komnata, mesto:string;
  FTableName, FtableNamekuda: string;

procedure TFMPereselenie.UpdateAndMoveRecord(const FIOSotrud: string; const FTableName: string;
  const FTableNameKuda: string; const komnata: string; const mesto: string);
var
  UniQuery: TUniQuery;
begin
  UniQuery := TUniQuery.Create(nil);
  try
    UniQuery.Connection := FMWelcom.UniConnection1;
    UniQuery.SQL.Text := 'SELECT * FROM ' + FTableName + ' WHERE `ФИО_сотрудника` = :fio';
    UniQuery.Params.ParamByName('fio').AsString := FIOSotrud;
    UniQuery.Open;

    if not UniQuery.IsEmpty then
    begin
      var Comment := UniQuery.FieldByName('Комментарий').AsString;
      var Datazaezda := UniQuery.FieldByName('Дата_заезда_отпуска').AsString;
      var Dolznost := UniQuery.FieldByName('Должность').AsString;
      var Org := UniQuery.FieldByName('Организация').AsString;
      var Tel := UniQuery.FieldByName('Контактный_телефон').AsString;
      //var mesto := UniQuery.FieldByName('Кол_во_мест').AsString;

      UniQuery.Close;
      UniQuery.SQL.Text := 'DELETE FROM ' + FTableName + ' WHERE `ФИО_сотрудника` = :fio';
      UniQuery.Params.ParamByName('fio').AsString := FIOSotrud;
      UniQuery.ExecSQL;

      UniQuery.SQL.Text := 'INSERT INTO ' + FTableNameKuda +
        ' (`ФИО_сотрудника`, `Комментарий`, `Дата_заезда_отпуска`, `Должность`, `Организация`, ' +
        '`Контактный_телефон`, `Номер`, `Кол_во_мест`) VALUES (:fio, :comment, :datazaezda, :dolznost, :org, :tel, :komnata, :mesto)';
      UniQuery.Params.ParamByName('fio').AsString := FIOSotrud;
      UniQuery.Params.ParamByName('comment').AsString := Comment;
      UniQuery.Params.ParamByName('datazaezda').AsString := Datazaezda;
      UniQuery.Params.ParamByName('dolznost').AsString := Dolznost;
      UniQuery.Params.ParamByName('org').AsString := Org;
      UniQuery.Params.ParamByName('tel').AsString := Tel;
      UniQuery.Params.ParamByName('komnata').AsString := komnata;
      UniQuery.Params.ParamByName('mesto').AsString := mesto;
      UniQuery.ExecSQL;
    end;
  finally
    UniQuery.Free;
  end;
end;

procedure TFMPereselenie.Button1Click(Sender: TObject);
begin
  UpdateAndMoveRecord(CBKogo.Text,FTableName,FtableNamekuda,komnata,mesto);
  CBKogo.Enabled := false;
  CBKogo.Items.Clear;
  CBKogo.Text := 'ФИО сотрудника для удаления';
  Close;
end;

procedure TFMPereselenie.Button2Click(Sender: TObject);
begin
  Close;
end;

procedure TFMPereselenie.CBKogoChange(Sender: TObject);
begin
  CBKuda1.Enabled:= true;
  fiosotrud:=CBKogo.Text;
end;

procedure TFMPereselenie.CBKomnataChange(Sender: TObject);
begin
  komnata:=CBKomnata.Text;
end;

procedure TFMPereselenie.CBKuda1Change(Sender: TObject);
var
  UniQuery1: TUniQuery;
begin
   CBKomnata.Enabled:=true;
  FtableNamekuda:='';
  case CBkuda1.ItemIndex of
   0: begin
    FtableNamekuda:='balki';
    // Подключение к базе данных MySQL
    FMWelcom.UniConnection1.Connect;

    // Выборка уникальных значений из таблицы "balki"
     UniQuery1 := TUniQuery.Create(nil);
     UniQuery1.Connection := FMWelcom.UniConnection1;
     UniQuery1.SQL.Text := 'SELECT DISTINCT `Номер` FROM `balki`';
     UniQuery1.Open;

     // Заполнение ComboBox2 полученными значениями
     CBKomnata.Clear;
     while not UniQuery1.Eof do
     begin
       CBKomnata.Items.Add(UniQuery1.FieldByName('Номер').AsString);
       UniQuery1.Next;
     end;

   end;
   1: begin
    FtableNamekuda:='obchaga';
    // Подключение к базе данных MySQL
    FMWelcom.UniConnection1.Connect;

     // Выборка уникальных значений из таблицы "obchaga"
     UniQuery1 := TUniQuery.Create(nil);
     UniQuery1.Connection := FMWelcom.UniConnection1;
     UniQuery1.SQL.Text := 'SELECT DISTINCT `Номер` FROM `obchaga`';
     UniQuery1.Open;

     // Заполнение ComboBox2 полученными значениями
     CBKomnata.Clear;
     while not UniQuery1.Eof do
     begin
       CBKomnata.Items.Add(UniQuery1.FieldByName('Номер').AsString);
       UniQuery1.Next;
     end;

   end;
  end;
end;

procedure TFMPereselenie.CBOtkudaChange(Sender: TObject);
var
  Query: TUniQuery;
  List: TStringList;
begin
  Query:=nil;
  CBKogo.Enabled:=true;
  FTableName := '';
  case CBOtkuda.ItemIndex of
    0:
    begin
      // Выбран первый пункт, выводим список из таблицы balki
      Query := UniQuery2;
      Query.SQL.Text := 'SELECT `ФИО_сотрудника` FROM `balki`';
      FTableName := 'balki';
    end;
    1:
    begin
      // Выбран третий пункт, выводим список из таблицы obchaga
      Query := UniQuery2;
      Query.SQL.Text := 'SELECT `ФИО_сотрудника` FROM `obchaga`';
      FTableName := 'obchaga';
    end;
  end;

  List := TStringList.Create;
  try
    if Assigned(Query) then
    begin
      Query.Connection := FMWelcom.UniConnection1;
      Query.Open;
      while not Query.Eof do
      begin
        List.Add(Query.FieldByName('ФИО_сотрудника').AsString);
        Query.Next;
      end;
      List.Sort;
      CBKogo.Items.Assign(List);
      Query.Close;
    end;
  finally
    List.Free;
  end;
end;

procedure TFMPereselenie.FormShow(Sender: TObject);
begin
  CBOtkuda.ItemIndex:=-1;
  CBOtkuda.Text:='Выберите место проживания';
  CBKogo.Text:='';
  CBKuda1.Text:='';
  CBKomnata.Text:='';
end;

end.

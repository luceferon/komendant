unit DateU;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.WinXPickers;

type
  TFMDate = class(TForm)
    Button2: TButton;
    Button1: TButton;
    DatePicker1: TDatePicker;
    procedure Button2Click(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure FormShow(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FMDate: TFMDate;

implementation

{$R *.dfm}

uses ZaselenieU;

procedure TFMDate.Button1Click(Sender: TObject);
begin
  case chekgrid of
    1: FMZaselenie.StringGrid1.Cells[FMZaselenie.StringGrid1.Col, FMZaselenie.StringGrid1.Row]:= DateToStr(DatePicker1.Date);
    2: FMZaselenie.StringGrid3.Cells[FMZaselenie.StringGrid3.Col, FMZaselenie.StringGrid3.Row]:= DateToStr(DatePicker1.Date);
    3: FMZaselenie.StringGrid2.Cells[FMZaselenie.StringGrid2.Col, FMZaselenie.StringGrid2.Row]:= DateToStr(DatePicker1.Date);
  end;

  FMDate.Close;
end;

procedure TFMDate.Button2Click(Sender: TObject);
begin
  FMDate.Close;
end;

procedure TFMDate.FormShow(Sender: TObject);
var
  UserInput, FirstDateStr, SecondDateStr: string;
  FirstDate, SecondDate: TDate;
  SeparatorPos: Integer;
begin
  case chekgrid of
    1:
    begin
       UserInput :=  FMZaselenie.StringGrid1.Cells[FMZaselenie.StringGrid1.Col, FMZaselenie.StringGrid1.Row];
       SeparatorPos := Pos('-', UserInput); // Поиск позиции разделителя

       if SeparatorPos > 0 then
       begin
    // Формат даты "дд.мм.гггг - дд.мм.гггг"
          FirstDateStr := Trim(Copy(UserInput, 1, SeparatorPos - 1));
          SecondDateStr := Trim(Copy(UserInput, SeparatorPos + 1, Length(UserInput) - SeparatorPos));

    // Преобразование первой даты
          try
            FirstDate := StrToDate(FirstDateStr);
          except
            on EConvertError do
            begin
                ShowMessage('Некорректная первая дата!');
                Exit;
            end;
          end;

    // Преобразование второй даты
          try
            SecondDate := StrToDate(SecondDateStr);
          except
            on EConvertError do
            begin
              ShowMessage('Некорректная вторая дата!');
              Exit;
            end;
          end;

    // Занесение второй даты в компонент DatePicker (с именем DatePicker1)
          DatePicker1.Date := SecondDate;
       end
      else
      begin
    // Формат даты "дд.мм.гггг"
        try
          FirstDate := StrToDate(UserInput);
          SecondDate := FirstDate;
        except
          on EConvertError do
          begin
            ShowMessage('Некорректная дата!');
            Exit;
          end;
        end;

    // Занесение даты в компонент DatePicker (с именем DatePicker1)
      DatePicker1.Date := FirstDate;
      end;
    end;
    2:
    begin
       UserInput :=  FMZaselenie.StringGrid3.Cells[FMZaselenie.StringGrid3.Col, FMZaselenie.StringGrid3.Row];
       SeparatorPos := Pos('-', UserInput); // Поиск позиции разделителя

       if SeparatorPos > 0 then
       begin
    // Формат даты "дд.мм.гггг - дд.мм.гггг"
          FirstDateStr := Trim(Copy(UserInput, 1, SeparatorPos - 1));
          SecondDateStr := Trim(Copy(UserInput, SeparatorPos + 1, Length(UserInput) - SeparatorPos));

    // Преобразование первой даты
          try
            FirstDate := StrToDate(FirstDateStr);
          except
            on EConvertError do
            begin
                ShowMessage('Некорректная первая дата!');
                Exit;
            end;
          end;

    // Преобразование второй даты
          try
            SecondDate := StrToDate(SecondDateStr);
          except
            on EConvertError do
            begin
              ShowMessage('Некорректная вторая дата!');
              Exit;
            end;
          end;

    // Занесение второй даты в компонент DatePicker (с именем DatePicker1)
          DatePicker1.Date := SecondDate;
       end
      else
      begin
    // Формат даты "дд.мм.гггг"
        try
          FirstDate := StrToDate(UserInput);
          SecondDate := FirstDate;
        except
          on EConvertError do
          begin
            ShowMessage('Некорректная дата!');
            Exit;
          end;
        end;

    // Занесение даты в компонент DatePicker (с именем DatePicker1)
        DatePicker1.Date := FirstDate;
      end;
    end;
    3:
    begin
       UserInput :=  FMZaselenie.StringGrid2.Cells[FMZaselenie.StringGrid2.Col, FMZaselenie.StringGrid2.Row];
        SeparatorPos := Pos('-', UserInput); // Поиск позиции разделителя

       if SeparatorPos > 0 then
       begin
    // Формат даты "дд.мм.гггг - дд.мм.гггг"
          FirstDateStr := Trim(Copy(UserInput, 1, SeparatorPos - 1));
          SecondDateStr := Trim(Copy(UserInput, SeparatorPos + 1, Length(UserInput) - SeparatorPos));

    // Преобразование первой даты
          try
            FirstDate := StrToDate(FirstDateStr);
          except
            on EConvertError do
            begin
                ShowMessage('Некорректная первая дата!');
                Exit;
            end;
          end;

    // Преобразование второй даты
          try
            SecondDate := StrToDate(SecondDateStr);
          except
            on EConvertError do
            begin
              ShowMessage('Некорректная вторая дата!');
              Exit;
            end;
          end;

    // Занесение второй даты в компонент DatePicker (с именем DatePicker1)
          DatePicker1.Date := SecondDate;
       end
      else
      begin
    // Формат даты "дд.мм.гггг"
        try
          FirstDate := StrToDate(UserInput);
          SecondDate := FirstDate;
        except
          on EConvertError do
          begin
            ShowMessage('Некорректная дата!');
            Exit;
          end;
        end;

    // Занесение даты в компонент DatePicker (с именем DatePicker1)
        DatePicker1.Date := FirstDate;
      end;
    end;

  {case chekgrid of
    1: DatePicker1.Date := StrToDate(FMZaselenie.StringGrid1.Cells[FMZaselenie.StringGrid1.Col, FMZaselenie.StringGrid1.Row]);
    2: DatePicker1.Date := StrToDate(FMZaselenie.StringGrid3.Cells[FMZaselenie.StringGrid3.Col, FMZaselenie.StringGrid3.Row]);
    3: DatePicker1.Date := StrToDate(FMZaselenie.StringGrid2.Cells[FMZaselenie.StringGrid2.Col, FMZaselenie.StringGrid2.Row]);
  end;}
  end;
end;

end.

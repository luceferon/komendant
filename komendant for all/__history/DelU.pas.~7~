unit DelU;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Data.DB, Data.SqlExpr, Data.FMTBcd,
  MemDS, DBAccess, Uni, MySQLUniProvider;

type
  TFMDel = class(TForm)
    CBOtkuda: TComboBox;
    CBKogo: TComboBox;
    Label1: TLabel;
    Label2: TLabel;
    Button1: TButton;
    Button2: TButton;
    UniConnection1: TUniConnection;
    UniQuery1: TUniQuery;
    UniQuery2: TUniQuery;
    UniQuery3: TUniQuery;
    procedure Button2Click(Sender: TObject);
    procedure CBOtkudaChange(Sender: TObject);
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FMDel: TFMDel;
  tabl: string;
implementation

{$R *.dfm}

//Удаление и закрытие окна
procedure TFMDel.Button1Click(Sender: TObject);
var
  Connection: TUniConnection;
  Query: TUniQuery;
begin
  Connection := TUniConnection.Create(nil);
  Query := TUniQuery.Create(nil);
  try
    Connection.Server := 'localhost';
    Connection.Database := 'kommendant';
    Connection.Username := 'root';
    Connection.Password := '1q2w3e4r';
    Connection.ProviderName := 'MySQL';

    Query.Connection := Connection;
    Query.SQL.Text := 'DELETE FROM `'+tabl+'` WHERE `ФИО сотрудника` = :fio';
    Query.Params.ParamByName('fio').AsString := CBKogo.Text;
    Query.Execute;

  finally
    Connection.Free;
    Query.Free;
  end;
  FMDel.Close;
end;

//Просто закрытие окна
procedure TFMDel.Button2Click(Sender: TObject);
begin
  close;
end;

//Отобразить список сотрудников в зависимости от выбора группы заселения
procedure TFMDel.CBOtkudaChange(Sender: TObject);
var
  Connection: TUniConnection;
  Query: TUniQuery;
  List: TStrings;
begin
  CBKogo.Enabled:=true;
  Connection := TUniConnection.Create(nil);
  Query := TUniQuery.Create(nil);
  List := TStringList.Create;
  try
    Connection.Server := 'localhost';
    Connection.Database := 'kommendant';
    Connection.Username := 'root';
    Connection.Password := '1q2w3e4r';
    Connection.ProviderName := 'MySQL';

    case CBOtkuda.ItemIndex of
      {0:
      begin
        // Выбран первый пункт, выводим список из всех трех таблиц
        Query.Connection := Connection;
        Query.SQL.Text := 'SELECT `ФИО сотрудника` FROM `balki` UNION ALL SELECT `ФИО сотрудника` FROM `itr` UNION ALL SELECT `ФИО сотрудника` FROM `obchaga`';
        Query.Open;
        while not Query.Eof do
        begin
          List.Add(Query.FieldByName('ФИО сотрудника').AsString);
          Query.Next;
        end;
        CBKogo.Items.Assign(List);
      end;}
      0:
      begin
        // Выбран первый пункт, выводим список из таблицы balki
        tabl:='balki';
        Query.Connection := Connection;
        Query.SQL.Text := 'SELECT `ФИО сотрудника` FROM `balki`';
        Query.Open;
        while not Query.Eof do
        begin
          List.Add(Query.FieldByName('ФИО сотрудника').AsString);
          Query.Next;
        end;
        CBKogo.Items.Assign(List);
      end;
      1:
      begin
        // Выбран второй пункт, выводим список из таблицы itr
        tabl:='itr';
        Query.Connection := Connection;
        Query.SQL.Text := 'SELECT `ФИО сотрудника` FROM `itr`';
        Query.Open;
        while not Query.Eof do
        begin
          List.Add(Query.FieldByName('ФИО сотрудника').AsString);
          Query.Next;
        end;
        CBKogo.Items.Assign(List);
      end;
      2:
      begin
        // Выбран третий пункт, выводим список из таблицы obchaga
        tabl:='obchaga';
        Query.Connection := Connection;
        Query.SQL.Text := 'SELECT `ФИО сотрудника` FROM `obchaga`';
        Query.Open;
        while not Query.Eof do
        begin
          List.Add(Query.FieldByName('ФИО сотрудника').AsString);
          Query.Next;
        end;
        CBKogo.Items.Assign(List);
      end;
    end;
  finally
    Connection.Free;
    Query.Free;
    List.Free;
  end;


end;

end.
